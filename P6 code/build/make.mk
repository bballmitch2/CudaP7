# 15-462 project makefile
# Authors: Eric Butler
# DO NOT EDIT THIS FILE

#########
# USAGE #
#########

# the makefile assumes the following variables are defined:
# MODE: the mode, either "debug" or "release"
# MKFILE: the makefile from which to load the sources/target

include build/defines.mk
include $(MKFILE)

# the current directory
CURR_DIR = $(shell pwd)

# global compiler flags
CXX = g++
CXXFLAGS += -Wall -ansi -Wextra -I"./include" -I"./$(SRC_DIR)" -I"$(CUDA_H_PATH)" $(COMPILER_FLAGS)

# cuda compiler flags
NVCC := nvcc
NVCCFLAGS_NOEXTRA = -I"$(CURR_DIR)/$(SRC_DIR)" -I"$(CUDA_H_PATH)"
NVCCFLAGS = $(NVCCFLAGS_NOEXTRA) $(CUDA_FLAGS)

# object directories, mode flags
ifeq ($(MODE), release)
	SUB_OBJ_DIR = release
	CXXFLAGS += -O2
	NVCCFLAGS += -O2
else ifeq ($(MODE), debug)
	SUB_OBJ_DIR = debug
	CXXFLAGS += -g -O0
	NVCCFLAGS += -g -O0
else ifeq ($(MODE), profile)
	SUB_OBJ_DIR = profile
	CXXFLAGS += -O2 -pg
	NVCCFLAGS += -O2 -pg
else
	ERRORMSG = "unknown build mode: $(MODE)"
endif

# create full object and bin dirs
OBJ_DIR := $(OBJ_DIR)/$(SUB_OBJ_DIR)/$(TARGET)
BIN_DIR := $(BIN_DIR)/$(SUB_OBJ_DIR)

# set AFTER setting BIN_DIR (since BIN_DIR is used as a flag)
LDFLAGS += -L"$(CUDA_LIB_PATH)" -L"./$(BIN_DIR)" -L"./lib" $(LINK_LIBRARIES)

# list of all object files
OBJS = $(SRCS:.cpp=.o)
# also include cuda sources
OBJS += $(CUDA_SRCS:.cu=.o)

# list of all dep files
DEPS = $(OBJS:.o=.d)
# full list of paths to all objs
OBJS_FULL = $(addprefix $(OBJ_DIR)/,$(OBJS))
# full list of paths to all deps
DEPS_FULL = $(addprefix $(OBJ_DIR)/,$(DEPS))

# targets

.PHONY: target

ifneq ($(ERRORMSG),)
target:
	$(error $(ERRORMSG))
else
target: $(BIN_DIR)/$(TARGET)

$(OBJ_DIR)/%.d: $(SRC_DIR)/%.cpp
	@mkdir -p $(@D)
	$(CXX) $(CXXFLAGS) -MM -MP -MT $(@:.d=.o) -o $@ $<

$(OBJ_DIR)/%.d: $(SRC_DIR)/%.cu
	@mkdir -p $(@D)
	$(CXX) $(NVCCFLAGS_NOEXTRA) -D__CUDACC__ -x c++ -MM -MP -MT $(@:.d=.o) -o $@ $<

# don't need to mkdir for object files since d files already exist
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

# build CUDA sources with nvcc
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cu
	$(NVCC) $(NVCCFLAGS) -c -o $@ $<

ifneq ($(MAKECMDGOALS),clean)
-include $(DEPS_FULL)
endif

ifeq ($(TARGET_TYPE), executable)
# executables
$(BIN_DIR)/$(TARGET): $(OBJS_FULL)
	@mkdir -p $(@D)
	$(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)
else ifeq ($(TARGET_TYPE), static_library)
# libraries
$(BIN_DIR)/$(TARGET): $(OBJS_FULL)
	@mkdir -p $(@D)
	ar rcs $@ $^
else
$(BIN_DIR)/$(TARGET):
	$(error "Unkown target-type: $(TARGET_TYPE)")
endif

endif


